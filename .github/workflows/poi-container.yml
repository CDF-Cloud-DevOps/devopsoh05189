# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-custom-container?tabs=dotnet&pivots=container-linux
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Create a GitHub Personal access token with "repo" and "read:packages" permissions.
#
# 4. Create three app settings on your Azure Web app:
#       DOCKER_REGISTRY_SERVER_URL: Set this to "https://ghcr.io"
#       DOCKER_REGISTRY_SERVER_USERNAME: Set this to the GitHub username or organization that owns the repository
#       DOCKER_REGISTRY_SERVER_PASSWORD: Set this to the value of your PAT token from the previous step
#
# 5. Change the value for the AZURE_WEBAPP_NAME.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy a container to an Azure Web App

# Make chnages to your variable here
env:
  AZURE_WEBAPP_NAME: devopsoh05189poi  # set this to the name of your Azure Web App
  RESOURCE_GROUP: devopsoh05189rg
  SLOT_NAME: staging
  ACR_IMAGES: devopsoh05189cr.azurecr.io/devopsoh/api-poi
  ACR_REGISTRY: devopsoh05189cr
  POI_STAGING_URL: https://devopsoh05189poi-staging.azurewebsites.net/api/version/poi
  #WORKING_DIR: apis/poi/web


defaults:
  run:
    working-directory: "apis/poi/web"
    
# Trigger
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  ### Build the image using naming convention
  build:
    name: Build Job
    runs-on: ubuntu-latest
    
    steps:
      ## Checkout
      - name: Checkout
        uses: actions/checkout@v3
      
      # Log into Azure 
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      ## Build image
      - name: Build image
        run: az acr build --build-arg build_version=${{ github.run_id }} --registry ${{ env.ACR_REGISTRY }} --image ${{ env.ACR_IMAGES }}:${{ github.run_id }} .
      
      ## Log out of Azure
      - name: Azure logout
        run: |
          az logout
         
  ## Deploy Job       
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      # Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Deploy container image
      - name: Deploy container image to App service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.SLOT_NAME }}
          images: '${{ env.ACR_IMAGES }}:${{ github.run_id }}'
      
      # Validate staging
      - name: Validate Staging
        uses: jtalk/url-health-check-action@v3
        with:
          url: ${{ env.POI_STAGING_URL }}
          max-attempts: 5
          retry-delay: 20s
      
      # Deployment Swap
      - name: Deployment Swap
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az webapp deployment slot swap -g ${{ env.RESOURCE_GROUP }} \
             -n ${{ env.AZURE_WEBAPP_NAME }} \
             --slot staging \
             --target-slot production
             
      - name: Azure Logout
        run: |
          az logout
             
